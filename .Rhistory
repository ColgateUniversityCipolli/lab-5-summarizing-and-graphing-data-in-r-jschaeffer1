Q3 = quantile(overall_loudness, 0.75),
LF = Q1 - 1.5*IQR(overall_loudness),
UF = Q3 + 1.5*IQR(overall_loudness),
max = max(overall_loudness)
) |> #Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF))
view(grouped.data)
view(allentown)
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artist.data = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
IQR(grouped.data$overall_loudness)
###Grouping data by artist and summarizing
grouped.data = artist.data|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(overall_loudness),
Q1 = quantile(overall_loudness, 0.25),
Q3 = quantile(overall_loudness, 0.75),
LF = Q1 - 1.5*IQR(overall_loudness),
UF = Q3 + 1.5*IQR(overall_loudness),
max = max(overall_loudness)
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF))
view(grouped.data)
view(allentown)
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artist.data = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
IQR(grouped.data$overall_loudness)
###Grouping data by artist and summarizing
grouped.data = artist.data|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(overall_loudness),
Q1 = quantile(overall_loudness, 0.25),
Q3 = quantile(overall_loudness, 0.75),
LF = Q1 - 1.5*IQR(overall_loudness),
UF = Q3 + 1.5*IQR(overall_loudness),
max = max(overall_loudness)
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
description = mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artist.data = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
IQR(grouped.data$overall_loudness)
###Grouping data by artist and summarizing
grouped.data = artist.data|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(overall_loudness),
Q1 = quantile(overall_loudness, 0.25),
Q3 = quantile(overall_loudness, 0.75),
LF = Q1 - 1.5*IQR(overall_loudness),
UF = Q3 + 1.5*IQR(overall_loudness),
max = max(overall_loudness)
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
view(grouped.data)
view(allentown)
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artist.data = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
IQR(grouped.data$overall_loudness)
###Grouping data by artist and summarizing
grouped.data = artist.data|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(overall_loudness),
Q1 = quantile(overall_loudness, 0.25),
Q3 = quantile(overall_loudness, 0.75),
LF = Q1 - 1.5*IQR(overall_loudness),
UF = Q3 + 1.5*IQR(overall_loudness),
max = max(overall_loudness)
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
view(grouped.data)
view(allentown)
?get
get(grouped.data(1))
grouped.data = artist.data|>
get(overall_loudness)
feature = c("overall_loudness",
"something_next")
feature = c("overall_loudness",
"something_next")
get(feature)
get(feature, 1)
get(feature, -1)
columns <- artists %>% select(where(is.numeric)) %>% colnames()
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
###Grouping data by artist and summarizing
grouped = artist.data|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(overall_loudness),
Q1 = quantile(overall_loudness, 0.25),
Q3 = quantile(overall_loudness, 0.75),
LF = Q1 - 1.5*IQR(overall_loudness),
UF = Q3 + 1.5*IQR(overall_loudness),
max = max(overall_loudness)
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
view(grouped)
view(allentown)
columns
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
### FOR LOOP TO SUMMARIZE EVERY PARAMETER ###
for (feature in columns){
###Grouping data by artist and summarizing
grouped = artist.data|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(get(feature)),
Q1 = quantile(get(feature), 0.25),
Q3 = quantile(get(feature), 0.75),
LF = Q1 - 1.5*IQR(get(feature)),
UF = Q3 + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$get(feature) > max |
allentown$get(feature) < min)) |>
mutate(unusual = (allentown$get(feature) > UF |
allentown$get(feature) < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
}
view(grouped)
rlang::last_trace()
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
### FOR LOOP TO SUMMARIZE EVERY PARAMETER ###
for (feature in columns){
###Grouping data by artist and summarizing
grouped = artist.data|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(get(feature)),
Q1 = quantile(get(feature), 0.25),
Q3 = quantile(get(feature), 0.75),
LF = Q1 - 1.5*IQR(get(feature)),
UF = Q3 + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
}
view(grouped)
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
### FOR LOOP TO SUMMARIZE EVERY PARAMETER ###
for (feature in columns){
###Grouping data by artist and summarizing
grouped = artists|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(get(feature)),
Q1 = quantile(get(feature), 0.25),
Q3 = quantile(get(feature), 0.75),
LF = Q1 - 1.5*IQR(get(feature)),
UF = Q3 + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
}
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
### FOR LOOP TO SUMMARIZE EVERY PARAMETER ###
#Grouping together our dataframe
grouped = artists|>
group_by(artist)
for (feature in columns){
###Grouping data by artist and summarizing
grouped |> #Moving on to summarize general qualities
summarize(min = min(get(feature)),
Q1 = quantile(get(feature), 0.25),
Q3 = quantile(get(feature), 0.75),
LF = Q1 - 1.5*IQR(get(feature)),
UF = Q3 + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
}
view(grouped)
grouped
get(feature)
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
### FOR LOOP TO SUMMARIZE EVERY PARAMETER ###
#Grouping together our dataframe
grouped = artists|>
group_by(artist)
for (feature in columns){
###Grouping data by artist and summarizing
grouped |> #Moving on to summarize general qualities
summarize(min = min(get(feature)),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
LF = Q1 - 1.5*IQR(get(feature)),
UF = Q3 + 1.5*IQR(get(feature)),
max = max(get(feature))
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
}
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
### FOR LOOP TO SUMMARIZE EVERY PARAMETER ###
#Grouping together our dataframe
grouped = artists|>
group_by(artist)
for (feature in columns){
###Grouping data by artist and summarizing
grouped |> #Moving on to summarize general qualities
summarize(min = min(get(feature)),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
LF = Q1 - 1.5*IQR(get(feature), na.rm = TRUE),
UF = Q3 + 1.5*IQR(get(feature), na.rm = TRUE),
max = max(get(feature))
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
}
view(grouped)
view(allentown)
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
### FOR LOOP TO SUMMARIZE EVERY PARAMETER ###
#Grouping together our dataframe
grouped = artists|>
group_by(artist)
feature = "overall_loudness"
#for (feature in columns){
###Grouping data by artist and summarizing
grouped |> #Moving on to summarize general qualities
summarize(min = min(get(feature)),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
LF = Q1 - 1.5*IQR(get(feature), na.rm = TRUE),
UF = Q3 + 1.5*IQR(get(feature), na.rm = TRUE),
max = max(get(feature))
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
#}
view(grouped)
view(allentown)
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
### FOR LOOP TO SUMMARIZE EVERY PARAMETER ###
#Grouping together our dataframe
feature = "overall_loudness"
#for (feature in columns){
###Grouping data by artist and summarizing
grouped = artists|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(get(feature)),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
LF = Q1 - 1.5*IQR(get(feature), na.rm = TRUE),
UF = Q3 + 1.5*IQR(get(feature), na.rm = TRUE),
max = max(get(feature))
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
#}
view(grouped)
view(allentown)
#################################################################
####                      STEP 1                            #####
##################################################################
### Loading Packages
library(stringr)
library(tidyverse)
library(jsonlite)
###Loading data files
artists = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
###Making a vector of all column names
columns <- artists %>% select(where(is.numeric)) %>% colnames()
### FOR LOOP TO SUMMARIZE EVERY PARAMETER ###
#Grouping together our dataframe
feature = "overall_loudness"
for (feature in columns){
###Grouping data by artist and summarizing
grouped = artists|>
group_by(artist) |> #Moving on to summarize general qualities
summarize(min = min(get(feature)),
Q1 = quantile(get(feature), 0.25, na.rm = TRUE),
Q3 = quantile(get(feature), 0.75, na.rm = TRUE),
LF = Q1 - 1.5*IQR(get(feature), na.rm = TRUE),
UF = Q3 + 1.5*IQR(get(feature), na.rm = TRUE),
max = max(get(feature))
) |>
#Adding new column to check if Allentown is within bounds
mutate(out.of.range = (allentown$overall_loudness > max |
allentown$overall_loudness < min)) |>
mutate(unusual = (allentown$overall_loudness > UF |
allentown$overall_loudness < LF)) |>
#Adding a new column to describe properties of where Allentown lies in bounds
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE       ~ "Within Range"))
}
view(grouped)
view(allentown)
